<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.hospital.mapper.MedicalAdviceMapper">
  <resultMap id="BaseResultMap" type="com.team.hospital.entity.MedicalAdvice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="registry_id" jdbcType="BIGINT" property="registryId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="chief_complaint" jdbcType="VARCHAR" property="chiefComplaint" />
    <result column="diagnosis" jdbcType="VARCHAR" property="diagnosis" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, registry_id, user_id, chief_complaint, diagnosis, created_time, updated_time
  </sql>
  <select id="selectByExample" parameterType="com.team.hospital.entity.MedicalAdviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from medical_advice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from medical_advice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from medical_advice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.team.hospital.entity.MedicalAdvice">
    insert into medical_advice (id, registry_id, user_id, 
      chief_complaint, diagnosis, created_time, 
      updated_time)
    values (#{id,jdbcType=BIGINT}, #{registryId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{chiefComplaint,jdbcType=VARCHAR}, #{diagnosis,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.team.hospital.entity.MedicalAdvice">
    insert into medical_advice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="registryId != null">
        registry_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="chiefComplaint != null">
        chief_complaint,
      </if>
      <if test="diagnosis != null">
        diagnosis,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="registryId != null">
        #{registryId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="chiefComplaint != null">
        #{chiefComplaint,jdbcType=VARCHAR},
      </if>
      <if test="diagnosis != null">
        #{diagnosis,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.hospital.entity.MedicalAdvice">
    update medical_advice
    <set>
      <if test="registryId != null">
        registry_id = #{registryId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="chiefComplaint != null">
        chief_complaint = #{chiefComplaint,jdbcType=VARCHAR},
      </if>
      <if test="diagnosis != null">
        diagnosis = #{diagnosis,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.hospital.entity.MedicalAdvice">
    update medical_advice
    set registry_id = #{registryId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      chief_complaint = #{chiefComplaint,jdbcType=VARCHAR},
      diagnosis = #{diagnosis,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>