<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	 http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	 http://www.springframework.org/schema/context
	 http://www.springframework.org/schema/context/spring-context-4.3.xsd
	http://www.springframework.org/schema/aop
	 http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!--在spring配置文件中使用PropertyPlaceholderConfigurer类加载属性文件-->
	<bean id="configurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!--1.定义数据源组件c3p0  作用：用于连接数据库-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClass}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!--2.定义sqlSessionFactory工厂组件-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--指定数据源-->
		<property name="dataSource" ref="dataSource"></property>
		<!--指定MyBatis的配置文件-->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!--3.使用MapperScannerConfigurer生成dao层实现类并放到spring容器中
	注意:1. sql映射的命名空间必需是接口的限定名，持久化操作的id值必需和接口方法中相同
         2. 动态生成实现类的bean对象id值，就是接口名称首字母小写
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--指定sqlSessionFacory对象-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!--扫描dao层接口，动态生成实现类的对象-->
		<property name="basePackage" value="com.team.hospital.mapper"></property>
	</bean>

	<!--扫描业务组件配置  注意:扫描业务实现类的对象-->
	<context:component-scan base-package="com.team.hospital.service.impl" />

	<!--配置Spring的事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

</beans>